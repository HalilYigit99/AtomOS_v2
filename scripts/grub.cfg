# GRUB Configuration for AtomOS
# Smart boot configuration that adapts to the boot method

set gfxmode=auto

# Font and encoding configuration
insmod font
if loadfont /boot/grub/fonts/unicode.pf2; then
    insmod gfxterm
    terminal_output gfxterm
fi

# Fallback font loading
if [ ! "${gfxterm_font}" ]; then
    # Try to load default GRUB font
    if loadfont ${prefix}/fonts/unicode.pf2; then
        true
    else
        # Force ASCII mode as last resort
        set locale_dir=$prefix/locale
        set lang=en_US
    fi
fi

# Set timeout and default
set timeout=5
set default=0

# Detect boot method and set appropriate variables
if [ "${grub_platform}" = "pc" ]; then
    # BIOS boot - use 32-bit kernel
    set kernel_file="/boot/kernelx86.elf"
    set boot_method="BIOS"
elif [ "${grub_platform}" = "efi" ]; then
    # EFI boot - check architecture
    if cpuid -l; then
        # 64-bit capable - use 64-bit kernel
        set kernel_file="/boot/kernelx64.elf"
        set boot_method="EFI64"
    else
        # 32-bit EFI - use 32-bit kernel
        set kernel_file="/boot/kernelx86.elf"
        set boot_method="EFI32"
    fi
else
    # Fallback to 32-bit
    set kernel_file="/boot/kernelx86.elf"
    set boot_method="Unknown"
fi

# Set video mode to highest supported resolution
# Try common high resolutions first, fallback to auto
if [ "${grub_platform}" = "efi" ]; then
    # EFI supports higher resolutions
    set gfxmode=1920x1080,1680x1050,1600x1200,1280x1024,1024x768,800x600,auto
else
    # BIOS is more limited
    set gfxmode=1024x768,800x600,640x480,auto
fi

# Load video drivers
insmod all_video
insmod gfxterm

# Set graphics terminal
terminal_output gfxterm

# Set background color and character encoding
set color_normal=white/black
set color_highlight=black/light-gray

# Ensure ASCII compatibility for menu items
# Using simpler characters that work better with font fallbacks
set menu_color_normal=white/black
set menu_color_highlight=black/light-gray

# Main menu entry
menuentry "AtomOS (${boot_method})" {
    echo "Booting AtomOS via ${boot_method}..."
    echo "Loading kernel: ${kernel_file}"
    
    multiboot2 ${kernel_file}
    boot
}

# Safe mode entry
menuentry "AtomOS Safe Mode (${boot_method})" {
    echo "Booting AtomOS in Safe Mode via ${boot_method}..."
    echo "Loading kernel: ${kernel_file}"
    
    multiboot2 ${kernel_file} safe_mode
    boot
}

# Debug mode entry (if debug symbols available)
menuentry "AtomOS Debug Mode (${boot_method})" {
    echo "Booting AtomOS in Debug Mode via ${boot_method}..."
    echo "Loading kernel: ${kernel_file}"
    
    multiboot2 ${kernel_file} debug
    boot
}

# Conditional entries based on boot method
if [ "${grub_platform}" = "efi" ]; then
    # EFI-specific options
    menuentry "UEFI Firmware Settings" {
        fwsetup
    }
fi

if [ "${grub_platform}" = "pc" ]; then
    # BIOS-specific options
    menuentry "Reboot" {
        reboot
    }
    
    menuentry "Halt" {
        halt
    }
fi

# Memory test (if available)
if [ -f /boot/memtest86+.bin ]; then
    menuentry "Memory Test" {
        linux16 /boot/memtest86+.bin
    }
fi